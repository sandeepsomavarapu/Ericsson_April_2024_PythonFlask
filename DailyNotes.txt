
Language:
==========
	communication

Programming Lanaguage:
=====================
	communication with machine
	
POP									OOP
B,BCPl,C,COBOL,PHOTON....		c++,java,python,ruby,.net.....	

					
					secuirty		abstraction,encapsulation		
					performance  inheritance,polymorphisam

guido van russam-->1989 
		
		1991 feb 20th
		
		1.x
		2.x
		3.x


	syntax


JAVA

	class Test
	{
	public static void main(String args[])
	{
	System.out.println("welcome to java");
	
	}
	
	}

.class

JVM

OP

PYTHON


the complete 



Functional Programming 	from C
OOP features from C++
Scrpting language feature Shellscript
modular programming modula-3

	C & ABC


Desktop/standalone apps 	corepython/tkinter
web apps					django/flask
DB apps                    PDBC
networking programming
games
DS
ML
AI
IOT
.....

monile apps not possible



Features :
==========

simple and easy
	33

free source/open source 
		jython-->java python

high level 

PI
	WORA	netflix 

portable

dynamically typed

				int age=123;static typed 
					age=22;dynamic typed 
				
					
					
interpreted				
						java ---compile-->javac filename.java-->.class-->jvm-->op
						python--->binary language 0's 1's
					
							interpreted
					
flavours				
					
		cpython
		jython
		ironpython
					
					
identifiers
		
		a-z
		A-Z
		0-9
		_
		
		age@now=33
		contact1=9898998
		1contact=9898998
		
		
variables

		name given to memory location
		
		local variables
		global variable
		
			age=123
keywords

	['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 
	'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global',
	'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return',
	'try', 'while', 'with', 'yield']

datatypes				
				int
				float
				complex		a+bj  3+4j 2.1+3.4j
				bool
				str
				range
				
				List
				Tuple
				Dict
				Set
				frozenset
				None
					
					
	orgname="ericsson india" -->index-->0
		slicing
		[]
		orgname[0]-->e
		orgname[1]-->r
		orgname[-1]
		orgname[25]-->indexerror
		len(orgname)
		
		"123"+12

	int()
	float()
	complex()
	bool()
	str()
	
	
	
	
	C:\Users\SANDEEP>PY
Python 3.11.0 (main, Oct 24 2022, 18:26:48) [MSC v.1933 64 bit (AMD64)] on win32
Type "help", "copyright", "credits" or "license" for more information.
>>> print('welcome to python')
welcome to python
>>> import keyword
>>> keyword.kwlist
['False', 'None', 'True', 'and', 'as', 'assert', 'async', 'await', 'break', 'class', 'continue', 'def', 'del', 'elif', 'else', 'except', 'finally', 'for', 'from', 'global', 'if', 'import', 'in', 'is', 'lambda', 'nonlocal', 'not', 'or', 'pass', 'raise', 'return', 'try', 'while', 'with', 'yield']
>>> eid=1234
>>> type(eid)
<class 'int'>
>>> print(eid)
1234
>>> esal=23.453
>>> type(esal)
<class 'float'>
>>> esal@1=23.453
  File "<stdin>", line 1
    esal@1=23.453
    ^^^^^^
SyntaxError: cannot assign to expression here. Maybe you meant '==' instead of '='?
>>> result=true
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'true' is not defined. Did you mean: 'True'?
>>> result=True
>>> type(result)
<class 'bool'>
>>> orgname="ericsson"
>>> orgname1="ericsson 'india' "
>>> orgname2='ericsson "india"'
>>> print(orgname)
ericsson
>>> print(orgname1)
ericsson 'india'
>>> print(orgname2)
ericsson "india"
>>> orgname2='ericsson "ind'i'a"'
  File "<stdin>", line 1
    orgname2='ericsson "ind'i'a"'
                            ^
SyntaxError: invalid syntax
>>> type(orgname)
<class 'str'>
>>> type(orgname)==str
True
>>> value=2+3j
>>> type(value)
<class 'complex'>
>>> """welcome
... india
... hyderabad"""
'welcome\nindia\nhyderabad'
>>> orgname="ericsson india hyderabad"
>>> type(orgname)
<class 'str'>
>>> print(orgname)
ericsson india hyderabad
>>> orgname[0]
'e'
>>> orgname[1]
'r'
>>> orgname[-1]
'd'
>>> orgname[-3]
'b'
>>> orgname[0:9]
'ericsson '
>>> orgname[3:6]
'css'
>>> orgname[3:]
'csson india hyderabad'
>>> orgname[:]
'ericsson india hyderabad'
>>> orgname[:7]
'ericsso'
>>> len(orgname)
24
>>> a="12"
>>> type(a)
<class 'str'>
>>> b=12
>>> type(b)
<class 'int'>
>>> print(a+b)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
TypeError: can only concatenate str (not "int") to str
>>> print(int(a)+b)
24
>>> result="True"
>>> type(result)
<class 'str'>
>>> if bool(result):print("welcome")
...
welcome
>>> if !bool(result):print("welcome")
  File "<stdin>", line 1
    if !bool(result):print("welcome")
       ^
SyntaxError: invalid syntax
>>> if !(bool(result)):print("welcome")
  File "<stdin>", line 1
    if !(bool(result)):print("welcome")
       ^
SyntaxError: invalid syntax
>>> float(12)
12.0
>>> int(True)
1
>>> int(False)
0
>>> float("12.3")
12.3
>>> float("10")
10.0
>>> float("ten")
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
ValueError: could not convert string to float: 'ten'
>>> bool(0)
False
>>> bool(1)
True
>>> bool(10)
True
>>> bool(10.5)
True
>>> bool(0.0)
False
>>> str(123)
'123'
>>> str(123.2)
'123.2'
>>> str(True)
'True'
>>> orgname="ericsson"
>>> id(orgname)
2265974634416
>>> orgname="ericsson india"
>>> id(orgname)
2265974634224
>>> orgname="ericsson"
>>> x="india"
>>> y="india"
>>> id(x)
2265974634224
>>> id(y)
2265974634224
>>> a=12
>>> b=12
>>> a is b
True